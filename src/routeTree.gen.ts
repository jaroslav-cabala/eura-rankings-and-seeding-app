/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ManagementImport } from './routes/management'
import { Route as GroupStageDrawsImport } from './routes/groupStageDraws'
import { Route as IndexImport } from './routes/index'
import { Route as RankingsIndexImport } from './routes/rankings/index'
import { Route as GroupStageDrawsIndexImport } from './routes/groupStageDraws/index'
import { Route as RankingsLayoutImport } from './routes/rankings/_layout'
import { Route as GroupStageDrawsNewImport } from './routes/groupStageDraws/new'
import { Route as GroupStageDrawsGroupStageDrawIdImport } from './routes/groupStageDraws/$groupStageDrawId'
import { Route as RankingsLayoutTeamImport } from './routes/rankings/_layout.team'
import { Route as RankingsLayoutIndividualImport } from './routes/rankings/_layout.individual'

// Create Virtual Routes

const RankingsImport = createFileRoute('/rankings')()

// Create/Update Routes

const RankingsRoute = RankingsImport.update({
  path: '/rankings',
  getParentRoute: () => rootRoute,
} as any)

const ManagementRoute = ManagementImport.update({
  path: '/management',
  getParentRoute: () => rootRoute,
} as any)

const GroupStageDrawsRoute = GroupStageDrawsImport.update({
  path: '/groupStageDraws',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RankingsIndexRoute = RankingsIndexImport.update({
  path: '/',
  getParentRoute: () => RankingsRoute,
} as any)

const GroupStageDrawsIndexRoute = GroupStageDrawsIndexImport.update({
  path: '/',
  getParentRoute: () => GroupStageDrawsRoute,
} as any)

const RankingsLayoutRoute = RankingsLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => RankingsRoute,
} as any)

const GroupStageDrawsNewRoute = GroupStageDrawsNewImport.update({
  path: '/new',
  getParentRoute: () => GroupStageDrawsRoute,
} as any)

const GroupStageDrawsGroupStageDrawIdRoute =
  GroupStageDrawsGroupStageDrawIdImport.update({
    path: '/$groupStageDrawId',
    getParentRoute: () => GroupStageDrawsRoute,
  } as any)

const RankingsLayoutTeamRoute = RankingsLayoutTeamImport.update({
  path: '/team',
  getParentRoute: () => RankingsLayoutRoute,
} as any)

const RankingsLayoutIndividualRoute = RankingsLayoutIndividualImport.update({
  path: '/individual',
  getParentRoute: () => RankingsLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/groupStageDraws': {
      preLoaderRoute: typeof GroupStageDrawsImport
      parentRoute: typeof rootRoute
    }
    '/management': {
      preLoaderRoute: typeof ManagementImport
      parentRoute: typeof rootRoute
    }
    '/groupStageDraws/$groupStageDrawId': {
      preLoaderRoute: typeof GroupStageDrawsGroupStageDrawIdImport
      parentRoute: typeof GroupStageDrawsImport
    }
    '/groupStageDraws/new': {
      preLoaderRoute: typeof GroupStageDrawsNewImport
      parentRoute: typeof GroupStageDrawsImport
    }
    '/rankings': {
      preLoaderRoute: typeof RankingsImport
      parentRoute: typeof rootRoute
    }
    '/rankings/_layout': {
      preLoaderRoute: typeof RankingsLayoutImport
      parentRoute: typeof RankingsRoute
    }
    '/groupStageDraws/': {
      preLoaderRoute: typeof GroupStageDrawsIndexImport
      parentRoute: typeof GroupStageDrawsImport
    }
    '/rankings/': {
      preLoaderRoute: typeof RankingsIndexImport
      parentRoute: typeof RankingsImport
    }
    '/rankings/_layout/individual': {
      preLoaderRoute: typeof RankingsLayoutIndividualImport
      parentRoute: typeof RankingsLayoutImport
    }
    '/rankings/_layout/team': {
      preLoaderRoute: typeof RankingsLayoutTeamImport
      parentRoute: typeof RankingsLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  GroupStageDrawsRoute.addChildren([
    GroupStageDrawsGroupStageDrawIdRoute,
    GroupStageDrawsNewRoute,
    GroupStageDrawsIndexRoute,
  ]),
  ManagementRoute,
  RankingsRoute.addChildren([
    RankingsLayoutRoute.addChildren([
      RankingsLayoutIndividualRoute,
      RankingsLayoutTeamRoute,
    ]),
    RankingsIndexRoute,
  ]),
])

/* prettier-ignore-end */
